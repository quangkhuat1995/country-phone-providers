{"version":3,"sources":["components/CountrySelect.js","components/SliderCustom.js","services/index.js","components/GatewayTable.js","App.js","reportWebVitals.js","index.js"],"names":["CountrySelect","props","Autocomplete","sx","width","options","countries","autoHighlight","getOptionLabel","option","label","renderOption","Box","component","code","renderInput","params","TextField","inputProps","autoComplete","value","countryValue","onChange","handleChangeCountry","React","SliderCustom","marks","min","max","rest","Slider","defaultValue","step","valueLabelDisplay","defaultProps","getCountryNameByCode","data","COUNTRIES","find","country","findCountryDataByCode","DATA","filter","country_code","mapProviderToValue","countryData","reduce","acc","cur","gateway","volume","push","minimum_volume","number","cost_per_dedicated_number_per_month_usd","messageCount","outbound_sms_costs_usd","name","getDataProvidersFromCountry","providerDict","providers","Object","keys","forEach","key","extractDollarSign","str","String","Number","trim","replace","convertToLocaleFormat","num","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","style","currency","StyledTableHeadCell","styled","TableCell","theme","tableCellClasses","head","fontWeight","GatewayTable","tableData","numbers","numberMessages","TableContainer","Paper","Table","minWidth","TableHead","TableRow","className","align","TableBody","length","map","row","idx","meetConditionVolumeIndex","costForMessage","costForNumber","border","scope","colSpan","createMarks","args","App","marksNumbers","useMemo","marksMessages","useState","setNumbers","setNumberMessages","setTableData","setCountryValue","handleChangeNumbers","useCallback","e","newValue","handleChangeNumberMessages","tmpTableData","useEffect","fetch","then","json","result","console","log","countryCode","catch","err","Grid","container","rowSpacing","item","xs","Typography","onChangeCommitted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ac3f9a1.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport countries from '../constants/countries.json';\r\n\r\nfunction CountrySelect(props) {\r\n\treturn (\r\n\t\t<Autocomplete\r\n\t\t\tsx={{ width: 300 }}\r\n\t\t\toptions={countries}\r\n\t\t\tautoHighlight\r\n\t\t\tgetOptionLabel={(option) => option.label || ''}\r\n\t\t\trenderOption={(props, option) => (\r\n\t\t\t\t<Box component=\"li\">\r\n\t\t\t\t\t{option.label} ({option.code})\r\n\t\t\t\t</Box>\r\n\t\t\t)}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\tlabel=\"Choose a country\"\r\n\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t...params.inputProps,\r\n\t\t\t\t\t\tautoComplete: 'new-password', // disable autocomplete and autofill\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\tvalue={props.countryValue}\r\n\t\t\tonChange={props.handleChangeCountry}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport default React.memo(CountrySelect);\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction SliderCustom(props) {\r\n\tconst { marks, min, max, ...rest } = props;\r\n\treturn (\r\n\t\t<Box sx={{ width: 300 }}>\r\n\t\t\t<Slider\r\n\t\t\t\taria-label=\"Custom marks\"\r\n\t\t\t\tmin={min}\r\n\t\t\t\tmax={max}\r\n\t\t\t\tdefaultValue={1}\r\n\t\t\t\tstep={1}\r\n\t\t\t\tvalueLabelDisplay=\"auto\"\r\n\t\t\t\tmarks={marks}\r\n\t\t\t\t{...rest}\r\n\t\t\t/>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nSliderCustom.defaultProps = {\r\n\tmarks: [],\r\n\tmin: 1,\r\n\tmax: 11000,\r\n};\r\n\r\nSliderCustom.propTypes = {\r\n\tmarks: PropTypes.array,\r\n\tmin: PropTypes.number,\r\n\tmax: PropTypes.number,\r\n};\r\n\r\nexport default SliderCustom;\r\n","import DATA from '../constants/data.json';\r\nimport COUNTRIES from '../constants/countries.json';\r\n\r\nconst getCountryNameByCode = (code = 'AU') => {\r\n\tconst data = COUNTRIES.find((country) => country.code === code);\r\n\tif (data) {\r\n\t\treturn data.label;\r\n\t}\r\n\treturn 'Not found country name';\r\n};\r\n\r\nconst findCountryDataByCode = (code = 'AU') => {\r\n\treturn DATA.filter((country) => country.country_code === code);\r\n};\r\n\r\nconst mapProviderToValue = (countryData = []) => {\r\n\t// const mock = DATA.filter((country) => country.country_code === code)\r\n\treturn countryData.reduce((acc, cur) => {\r\n\t\tif (!acc[cur.gateway]) {\r\n\t\t\tacc[cur.gateway] = {\r\n\t\t\t\tname: cur.gateway,\r\n\t\t\t\tvolume: [cur.minimum_volume],\r\n\t\t\t\tnumber: [cur.cost_per_dedicated_number_per_month_usd],\r\n\t\t\t\tmessageCount: [cur.outbound_sms_costs_usd],\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tacc[cur.gateway].volume.push(cur.minimum_volume);\r\n\t\t\tacc[cur.gateway].number.push(cur.cost_per_dedicated_number_per_month_usd);\r\n\t\t\tacc[cur.gateway].messageCount.push(cur.outbound_sms_costs_usd);\r\n\t\t}\r\n\t\treturn acc;\r\n\t}, {});\r\n};\r\n\r\n/**\r\n *\r\n *code: {\r\n\t\tname: 'New Zealand',\r\n\t\tproviders: [\r\n\t\t\t{\r\n\t\t\t\tname: 'Plivo',\r\n\t\t\t\tvolume: [0],\r\n\t\t\t\tnumber: [2.55],\r\n\t\t\t\tmessageCount: [0.1],\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: 'MessageMedia USA Inc.',\r\n\t\t\t\tvolume: [0, 0, 167, 357],\r\n\t\t\t\tnumber: [18, 35, 95],\r\n\t\t\t\tmessageCount: [0.1, 0.1, 0.08],\r\n\t\t\t},\r\n\t\t],\r\n\t}\r\n *\r\n */\r\nexport const getDataProvidersFromCountry = (code = 'AU') => {\r\n\tif (!code) return {};\r\n\tconst countryData = findCountryDataByCode(code);\r\n\tconst providerDict = mapProviderToValue(countryData);\r\n\r\n\tconst providers = [];\r\n\tObject.keys(providerDict).forEach((key) => {\r\n\t\tproviders.push(providerDict[key]);\r\n\t});\r\n\treturn {\r\n\t\tname: getCountryNameByCode(code),\r\n\t\tproviders,\r\n\t};\r\n};\r\n\r\nexport const extractDollarSign = (str = '') => {\r\n\tstr = String(str);\r\n\treturn Number(str.trim().replace('$', ''));\r\n};\r\n\r\nexport const convertToLocaleFormat = (num) => {\r\n\treturn num.toLocaleString(undefined, {\r\n\t\tminimumFractionDigits: 2,\r\n\t\tmaximumFractionDigits: 2,\r\n\t\tstyle: 'currency',\r\n\t\tcurrency: 'USD',\r\n\t});\r\n};\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { styled } from '@mui/material/styles';\r\nimport { convertToLocaleFormat, extractDollarSign } from '../services';\r\n\r\nconst StyledTableHeadCell = styled(TableCell)(({ theme }) => ({\r\n\t[`&.${tableCellClasses.head}`]: {\r\n\t\tfontWeight: 700,\r\n\t},\r\n}));\r\n\r\nfunction GatewayTable(props) {\r\n\tconst { tableData, numbers, numberMessages } = props;\r\n\treturn (\r\n\t\t<TableContainer component={Paper}>\r\n\t\t\t<Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<StyledTableHeadCell className=\"bold\">Gateway</StyledTableHeadCell>\r\n\t\t\t\t\t\t<StyledTableHeadCell className=\"bold\" align=\"right\">\r\n\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t</StyledTableHeadCell>\r\n\t\t\t\t\t\t<StyledTableHeadCell className=\"bold\" align=\"right\">\r\n\t\t\t\t\t\t\tCost for {numbers} numbers\r\n\t\t\t\t\t\t</StyledTableHeadCell>\r\n\t\t\t\t\t\t<StyledTableHeadCell className=\"bold\" align=\"right\">\r\n\t\t\t\t\t\t\tCost for {numberMessages} messages\r\n\t\t\t\t\t\t</StyledTableHeadCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{tableData?.providers?.length ? (\r\n\t\t\t\t\t\ttableData?.providers.map((row, idx) => {\r\n\t\t\t\t\t\t\tconst data = row.volume.filter((num) => num <= numberMessages);\r\n\t\t\t\t\t\t\tconst meetConditionVolumeIndex = data.length ? data.length - 1 : 0;\r\n\t\t\t\t\t\t\tconst costForMessage = extractDollarSign(row.messageCount[meetConditionVolumeIndex]) * numberMessages;\r\n\t\t\t\t\t\t\tconst costForNumber = extractDollarSign(row.number[meetConditionVolumeIndex]) * numbers;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<TableRow key={`${row.name}-${idx}`} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n\t\t\t\t\t\t\t\t\t<TableCell scope=\"row\">{row.name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell scope=\"row\">{tableData.name}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{convertToLocaleFormat(costForNumber)}</TableCell>\r\n\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{convertToLocaleFormat(costForMessage)}</TableCell>\r\n\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t\t<TableCell colSpan={4} className=\"no-data\" component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\tNo data found\r\n\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n\r\nGatewayTable.defaultProps = {\r\n\tnumbers: 0,\r\n\tnumberMessages: 0,\r\n\ttableData: {\r\n\t\tname: '',\r\n\t\tproviders: [],\r\n\t},\r\n};\r\n\r\nGatewayTable.propTypes = {\r\n\ttableData: PropTypes.shape({\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tproviders: PropTypes.array.isRequired,\r\n\t}),\r\n\tnumbers: PropTypes.number,\r\n\tnumberMessages: PropTypes.number,\r\n};\r\n\r\nexport default GatewayTable;\r\n","import { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport CountrySelect from './components/CountrySelect';\r\nimport SliderCustom from './components/SliderCustom';\r\nimport GatewayTable from './components/GatewayTable';\r\nimport './App.css';\r\nimport { getDataProvidersFromCountry } from './services';\r\n\r\nconst createMarks = (...args) => {\r\n\treturn args.map((number) => {\r\n\t\tnumber = Number(number);\r\n\t\treturn { value: number, label: `${number}` };\r\n\t});\r\n};\r\n\r\nfunction App() {\r\n\tconst marksNumbers = useMemo(() => createMarks(1, 5, 10, 15, 20), []);\r\n\tconst marksMessages = useMemo(() => createMarks(100, 1900, 3500, 5200, 7300, 8900, 11000), []);\r\n\tconst [numbers, setNumbers] = useState(1);\r\n\tconst [numberMessages, setNumberMessages] = useState(100);\r\n\tconst [tableData, setTableData] = useState(null);\r\n\tconst [countryValue, setCountryValue] = useState(null);\r\n\r\n\tconst handleChangeNumbers = useCallback((e, newValue) => {\r\n\t\tsetNumbers(newValue);\r\n\t}, []);\r\n\r\n\tconst handleChangeNumberMessages = useCallback((e, newValue) => {\r\n\t\tsetNumberMessages(newValue);\r\n\t}, []);\r\n\r\n\tconst handleChangeCountry = useCallback((e, newValue) => {\r\n\t\tif (newValue?.code) {\r\n\t\t\tsetCountryValue(newValue);\r\n\t\t\tconst tmpTableData = getDataProvidersFromCountry(newValue.code);\r\n\t\t\tsetTableData(tmpTableData);\r\n\t\t} else {\r\n\t\t\tsetCountryValue(null);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('https://extreme-ip-lookup.com/json/')\r\n\t\t\t.then((data) => data.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t\tsetCountryValue({ code: result.countryCode, label: result.country });\r\n\t\t\t\tconst tmpTableData = getDataProvidersFromCountry(result.countryCode);\r\n\t\t\t\tsetTableData(tmpTableData);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Grid container rowSpacing={4}>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Typography>What country will you send and receive SMS in?</Typography>\r\n\t\t\t\t\t<CountrySelect onChange={handleChangeCountry} countryValue={countryValue} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Typography>How many phone numbers do you need?</Typography>\r\n\t\t\t\t\t<SliderCustom marks={marksNumbers} max={20} onChangeCommitted={handleChangeNumbers} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<Typography>How many messages will you send per month?</Typography>\r\n\t\t\t\t\t<SliderCustom marks={marksMessages} min={100} onChangeCommitted={handleChangeNumberMessages} />\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t<GatewayTable tableData={tableData} numbers={numbers} numberMessages={numberMessages} />\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}